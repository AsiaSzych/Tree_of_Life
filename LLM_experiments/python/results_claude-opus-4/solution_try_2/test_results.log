============================= test session starts ==============================
platform linux -- Python 3.11.11, pytest-8.3.5, pluggy-1.6.0
rootdir: /home/joanna/Documents/Master_IU/Thesis/Coding task/Tree_of_Life/tests
plugins: anyio-4.9.0, langsmith-0.3.44
collected 7 items

all_tests.py FFFFFFF                                                     [100%]

=================================== FAILURES ===================================
_____________________ test_compare_needleman_wunsch_score ______________________

    def test_compare_needleman_wunsch_score():
        file_name = f"organisms_scores_blosum{BLOSUM}.json"
        expected_file = os.path.join(expected_folder, file_name)
        actual_file = os.path.join(actual_folder, file_name)
        expected_dict = read_file(expected_file)
        actual_dict = read_file(actual_file)
>       assert compare_dicts(expected=expected_dict, actual=actual_dict)=={}
E       AssertionError: assert {'African bus...': 1248}, ...} == {}
E         
E         Left contains 2556 more items:
E         {'African bush elephant_African bush elephant': {'actual': -261,
E                                                          'expected': 'missing'},
E          'African bush elephant_Alpine newt': {'actual': -261, 'expected': 1167},
E          'African bush elephant_American alligator': {'actual': -261, 'expected': 1152},
E          'African bush elephant_American beaver': {'actual': -261, 'expected': 1248},...
E         
E         ...Full output truncated (2589 lines hidden), use '-vv' to show

all_tests.py:17: AssertionError
_________________________ test_valid_newick_only_nodes _________________________

    def test_valid_newick_only_nodes():
        file_name = f"tree_blosum{BLOSUM}_newick.nw"
        actual_tree_file = os.path.join(actual_folder, file_name)
>       assert check_valid_newick(file_path=actual_tree_file)
E       AssertionError: assert False
E        +  where False = check_valid_newick(file_path='../LLM_experiments/python/results_claude-opus-4/solution_try_2/tree_blosum62_newick.nw')

all_tests.py:22: AssertionError
_______________________ test_valid_newick_with_distance ________________________

    def test_valid_newick_with_distance():
        file_name = f"tree_blosum{BLOSUM}_newick_with_distance.nw"
        actual_tree_file = os.path.join(actual_folder, file_name)
>       assert check_valid_newick(file_path=actual_tree_file)
E       AssertionError: assert False
E        +  where False = check_valid_newick(file_path='../LLM_experiments/python/results_claude-opus-4/solution_try_2/tree_blosum62_newick_with_distance.nw')

all_tests.py:27: AssertionError
________________________ test_compare_trees_only_nodes _________________________

    def test_compare_trees_only_nodes():
        file_name = f"tree_blosum{BLOSUM}_newick.nw"
        expected_file = os.path.join(expected_folder, file_name)
        actual_file = os.path.join(actual_folder, file_name)
>       assert compare_trees(expected_file_path=expected_file, actual_file_path=actual_file)

all_tests.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
newick_compare.py:6: in compare_trees
    actual_tree = Tree(actual_file_path)
/home/joanna/.pyenv/versions/3.11.11/envs/tree_of_life_base/lib/python3.11/site-packages/ete3/coretype/tree.py:212: in __init__
    read_newick(newick, root_node = self, format=format,
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

newick = '../LLM_experiments/python/results_claude-opus-4/solution_try_2/tree_blosum62_newick.nw'
root_node = Tree node '' (0x7fa6a085dc9), format = 0, quoted_names = False

    def read_newick(newick, root_node=None, format=0, quoted_names=False):
        """ Reads a newick tree from either a string or a file, and returns
        an ETE tree structure.
    
        A previously existent node object can be passed as the root of the
        tree, which means that all its new children will belong to the same
        class as the root(This allows to work with custom TreeNode
        objects).
    
        You can also take advantage from this behaviour to concatenate
        several tree structures.
        """
    
        if root_node is None:
            from ..coretype.tree import TreeNode
            root_node = TreeNode()
    
        if isinstance(newick, six.string_types):
    
            # try to determine whether the file exists.
            # For very large trees, if newick contains the content of the tree, rather than a file name,
            # this may fail, at least on Windows, because the os fails to stat the file content, deeming it
            # too long for testing with os.path.exists.  This raises a ValueError with description
            # "stat: path too long for Windows".  This is described in issue #258
            try:
                file_exists = os.path.exists(newick)
            except ValueError:      # failed to stat
                file_exists = False
    
            # if newick refers to a file, read it from file; otherwise, regard it as a Newick content string.
            if file_exists:
                if newick.endswith('.gz'):
                    import gzip
                    with gzip.open(newick) as INPUT:
                        nw = INPUT.read()
                else:
                    with open(newick) as INPUT:
                        nw = INPUT.read()
            else:
                nw = newick
    
    
            matcher = compile_matchers(formatcode=format)
            nw = nw.strip()
            if not nw.startswith('(') and nw.endswith(';'):
                #return _read_node_data(nw[:-1], root_node, "single", matcher, format)
                return _read_newick_from_string(nw, root_node, matcher, format, quoted_names)
            elif not nw.startswith('(') or not nw.endswith(';'):
>               raise NewickError('Unexisting tree file or Malformed newick tree structure.')
E               ete3.parser.newick.NewickError: Unexisting tree file or Malformed newick tree structure.
E               You may want to check other newick loading flags like 'format' or 'quoted_node_names'.

/home/joanna/.pyenv/versions/3.11.11/envs/tree_of_life_base/lib/python3.11/site-packages/ete3/parser/newick.py:264: NewickError
_______________________ test_compare_trees_with_distance _______________________

    def test_compare_trees_with_distance():
        file_name = f"tree_blosum{BLOSUM}_newick_with_distance.nw"
        expected_file = os.path.join(expected_folder, file_name)
        actual_file = os.path.join(actual_folder, file_name)
>       assert compare_branch_lengths(expected_file_path=expected_file, actual_file_path=actual_file) == []

all_tests.py:39: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
newick_compare.py:21: in compare_branch_lengths
    actual_tree = Tree(actual_file_path)
/home/joanna/.pyenv/versions/3.11.11/envs/tree_of_life_base/lib/python3.11/site-packages/ete3/coretype/tree.py:212: in __init__
    read_newick(newick, root_node = self, format=format,
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

newick = '../LLM_experiments/python/results_claude-opus-4/solution_try_2/tree_blosum62_newick_with_distance.nw'
root_node = Tree node '' (0x7fa6a06ddb1), format = 0, quoted_names = False

    def read_newick(newick, root_node=None, format=0, quoted_names=False):
        """ Reads a newick tree from either a string or a file, and returns
        an ETE tree structure.
    
        A previously existent node object can be passed as the root of the
        tree, which means that all its new children will belong to the same
        class as the root(This allows to work with custom TreeNode
        objects).
    
        You can also take advantage from this behaviour to concatenate
        several tree structures.
        """
    
        if root_node is None:
            from ..coretype.tree import TreeNode
            root_node = TreeNode()
    
        if isinstance(newick, six.string_types):
    
            # try to determine whether the file exists.
            # For very large trees, if newick contains the content of the tree, rather than a file name,
            # this may fail, at least on Windows, because the os fails to stat the file content, deeming it
            # too long for testing with os.path.exists.  This raises a ValueError with description
            # "stat: path too long for Windows".  This is described in issue #258
            try:
                file_exists = os.path.exists(newick)
            except ValueError:      # failed to stat
                file_exists = False
    
            # if newick refers to a file, read it from file; otherwise, regard it as a Newick content string.
            if file_exists:
                if newick.endswith('.gz'):
                    import gzip
                    with gzip.open(newick) as INPUT:
                        nw = INPUT.read()
                else:
                    with open(newick) as INPUT:
                        nw = INPUT.read()
            else:
                nw = newick
    
    
            matcher = compile_matchers(formatcode=format)
            nw = nw.strip()
            if not nw.startswith('(') and nw.endswith(';'):
                #return _read_node_data(nw[:-1], root_node, "single", matcher, format)
                return _read_newick_from_string(nw, root_node, matcher, format, quoted_names)
            elif not nw.startswith('(') or not nw.endswith(';'):
>               raise NewickError('Unexisting tree file or Malformed newick tree structure.')
E               ete3.parser.newick.NewickError: Unexisting tree file or Malformed newick tree structure.
E               You may want to check other newick loading flags like 'format' or 'quoted_node_names'.

/home/joanna/.pyenv/versions/3.11.11/envs/tree_of_life_base/lib/python3.11/site-packages/ete3/parser/newick.py:264: NewickError
____________________________ test_compare_clusters _____________________________

    def test_compare_clusters():
        file_name = f"clusters_for_blosum{BLOSUM}.json"
        expected_file = os.path.join(expected_folder, file_name)
        actual_file = os.path.join(actual_folder, file_name)
        expected_dict = read_file(expected_file)
>       actual_dict = read_file(actual_file)

all_tests.py:46: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

path = '../LLM_experiments/python/results_claude-opus-4/solution_try_2/clusters_for_blosum62.json'

    def read_file(path: str) -> dict:
>       with open(path) as input_file:
E       FileNotFoundError: [Errno 2] No such file or directory: '../LLM_experiments/python/results_claude-opus-4/solution_try_2/clusters_for_blosum62.json'

cluster_compare.py:6: FileNotFoundError
_______________________ test_check_png_file_path_exists ________________________

    def test_check_png_file_path_exists():
        file_name = f"phylogenetic_tree_blosum{BLOSUM}.png"
        actual_file = os.path.join(actual_folder, file_name)
>       assert os.path.exists(actual_file)
E       AssertionError: assert False
E        +  where False = <function exists at 0x7fa6d9797560>('../LLM_experiments/python/results_claude-opus-4/solution_try_2/phylogenetic_tree_blosum62.png')
E        +    where <function exists at 0x7fa6d9797560> = <module 'posixpath' (frozen)>.exists
E        +      where <module 'posixpath' (frozen)> = os.path

all_tests.py:52: AssertionError
=============================== warnings summary ===============================
../../../../../../.pyenv/versions/3.11.11/envs/tree_of_life_base/lib/python3.11/site-packages/ete3/webplugin/webapp.py:44
  /home/joanna/.pyenv/versions/3.11.11/envs/tree_of_life_base/lib/python3.11/site-packages/ete3/webplugin/webapp.py:44: DeprecationWarning: 'cgi' is deprecated and slated for removal in Python 3.13
    import cgi

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED all_tests.py::test_compare_needleman_wunsch_score - AssertionError: as...
FAILED all_tests.py::test_valid_newick_only_nodes - AssertionError: assert False
FAILED all_tests.py::test_valid_newick_with_distance - AssertionError: assert...
FAILED all_tests.py::test_compare_trees_only_nodes - ete3.parser.newick.Newic...
FAILED all_tests.py::test_compare_trees_with_distance - ete3.parser.newick.Ne...
FAILED all_tests.py::test_compare_clusters - FileNotFoundError: [Errno 2] No ...
FAILED all_tests.py::test_check_png_file_path_exists - AssertionError: assert...
========================= 7 failed, 1 warning in 2.86s =========================
